@page "/Principal"
@inject HttpClient Http

<link rel="stylesheet" href="css/style_general.css">

<div class="alert alert-secondary mt-3 bg-transparent border-0">
    <div class="container bg-transparent d-flex justify-content-center text-white text-center m-0 p-0" style="width: 100%;">
       @{
            var Items = new[]
            {
                new {Titulo = "Prestamos", Imagen = "/images/icon_Content_Book.svg", Amount = "12", ColorLight="--color-verde", ColorDark="--color-verde-o"},
                new {Titulo = "Caducar", Imagen = "/images/icon_Content_Book.svg", Amount = "3", ColorLight="--color-amarillo", ColorDark="--color-amarillo-o"},
                new {Titulo = "Vencidos", Imagen = "/images/icon_Content_Book.svg", Amount = "6", ColorLight="--color-rojo", ColorDark="--color-rojo-o"}
            };
            /*var numbOfItems = Items.Count() - 1;
            int _i = 0;*/
            @foreach (var Item in Items)
            {
                //var _margin = _i != numbOfItems ? "margin: 4rem 4rem 4rem 4rem;" : "margin: 4rem 0rem 4rem 0rem;";
                <div class="container m-3 p-0" style=@("width: 100%; border-radius: 1rem 1rem 1rem 1rem; background-color: var(" + @Item.ColorLight + ");")>
                    <div class="container-fluid h4 p-2" style=@("border-radius: 1rem 1rem 0 0; width: 100% height: 25%; background-color: var(" + @Item.ColorDark + ");")>
                        @Item.Titulo
                    </div>
                    <div class="container-fluid bg-transparent p-2 text-center h5" style="width: 75%;">
                        <img src=@Item.Imagen alt=@Item.Titulo.ToLower() class="m-1 p-0 text-center" style="width: 30%; height: 30%;">
                        <p>@Item.Amount</p>
                    </div>
                </div>
                //_i++;
            }
        }
    </div>

@if (FsS == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <div class="container bg-transparent d-flex justify-content-center text-white text-center m-0 p-0 col-4" style="width: 100%;">
            <div class="container m-4 p-0" style="border-radius: 1rem; background-color: #6586AD; width: 30%;">
                <div class="container-fluid h4 p-2" style="border-radius: 1rem 1rem 0 0; background-color: #355675;">
                    Usuarios
                </div>
                <div class="container-fluid bg-transparent p-2 text-center h5">
                    <img src="/images/UsuarioIcono_B.svg" alt="usuarios" class="m-1 p-0 text-center" style="width: 30%; height: 30%;">
                    <p>3</p>
                </div>
            </div>

            <div class="container m-4 p-0 col-8" style="border-radius: 1rem; background-color:#9d6868; width: 60%;">
                <div class="container-fluid h4 p-2" style="border-radius: 1rem 1rem 0 0; background-color:#825555;">
                    Libros sin Stock
                </div>
                <div class="container-fluid bg-white p-2 text-center br-5" style="border: 1px solid black;">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Título</th>
                                <th>Autor</th>
                                <th>Cantidad en stock</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var forecast in FsS)
                        {
                        <tr>
                            
                            <td>@forecast.Titulo</td>
                            <td>@forecast.Autor</td>
                            <td>@forecast.Cantidad</td>
                        </tr>
                    }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
}
</div>
@code {
    private WeatherForecast[]? FsS;

    protected override async Task OnInitializedAsync()
    {
        FsS = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/DataSinStock.json");
    }

    public class WeatherForecast
    {

        public string? Titulo { get; set; }
        public string? Autor { get; set; }
        public int Cantidad { get; set; }
    }

}

@inject HttpClient Http
@using Blazored.SessionStorage;
@inject NavigationManager NavigationManager
@inject ISessionStorageService sessionStorage
@using Pages

@if (Lb == null)
{
  <p><em>Loading...</em></p>
}else{
  <div class="container m-0 p-3 mt-5" style="background-color: #825550; border-radius: 0.5rem;">
    <h3 class="text-center text-light">
            <strong>@Filtros.Titulo</strong>
    </h3>
    <div style="border-radius: 0.3rem; height: 500px; overflow-y: scroll;" class="container bg-light m-0 p-0">
            <table class="table">
                <thead class="thead" style="background-color: transparent;">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Paginas</th>
                        <th>Descripcionn</th>
                        <th>Edicion</th>
                        <th>Publicacion</th>
                        <th>Categoria</th>
                        <th>Autor</th>
                        <th>Editorial</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in Lb)
                    {
                        if (forecast.id == Filtros.Busqueda || forecast.nombre == Filtros.Busqueda || forecast.descripcion == Filtros.Busqueda || forecast.categoria == Filtros.Busqueda || forecast.autor == Filtros.Busqueda || forecast.editorial == Filtros.Busqueda)
                        {
                            fondo = "background-color: darkgray;";
                        }
                        else { fondo = ""; }
                        <tr style="@fondo" >
                            <th>@forecast.id</th>
                            <td>@forecast.nombre</td>
                            <td>@forecast.paginas</td>
                            <td>@forecast.descripcion</td>
                            <td>@forecast.edicion</td>
                            <td>@forecast.fechaPublicacion.ToString("yyyy-MM-dd")</td>
                            <td>@forecast.categoria</td>
                            <td>@forecast.autor</td>
                            <td>@forecast.editorial</td>
                            <td>
                                <!--Aqui es donde se debe cambiar el boton-->
                                <button type="button" class="btn btn-info btn-sm" @onclick="() => EditarLibro(forecast.id)">Editar</button>


                            </td>
                            <td>
                                <button type="button" class="btn btn-danger btn-sm" @onclick="@(() => EliminarLibro(forecast.id))">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    </div>
  </div>
}

   

@code {

    private Libro[]? Lb;
    string fondo = "";

    public async Task EliminarLibro(string id)
    {
        try
        {
            HttpResponseMessage response = await Http.DeleteAsync($"https://localhost:7268/api/Libro/{id}");
            response.EnsureSuccessStatusCode();

            // Eliminaci√≥n exitosa, recargar la lista de editoriales
            Lb = await Http.GetFromJsonAsync<Libro[]>("https://localhost:7268/api/Libro");
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error al eliminar el editorial: {e.Message}");
        }
    }

   

 
    private async Task EditarLibro(string libroId)
    {
       
        await sessionStorage.SetItemAsync("LibroId", libroId);
      
        
        NavigationManager.NavigateTo($"/PanelEditarLibro");
        
    }

    protected override async Task OnInitializedAsync()
    {
        Lb = await Http.GetFromJsonAsync<Libro[]>("https://localhost:7268/api/Libro");
    }



    public class Libro
    {
        public string id { get; set; }
        public string nombre { get; set; }
        public int paginas { get; set; }
        public string? descripcion { get; set; }
        public int edicion { get; set; }
        public DateTime fechaPublicacion { get; set; }
        public string? autor { get; set; }
        public string? categoria { get; set; }
        public string? editorial { get; set; }
    }


}
@using System.Text.Json
@using System.Text
@inject HttpClient Http
@if (FsLb == null)
{
  <p><em>Loading...</em></p>
}else{
  <div class="container m-0 p-3 mt-5" style="background-color: #825550; border-radius: 0.5rem;">
    <h3 class="text-center text-light">
      <strong></strong></h3>
    <div style="border-radius: 0.3rem; height: 500px; overflow-y: scroll;" class="container bg-light m-0 p-0">
      <table class="table">
        <thead class="thead" style="background-color: transparent;">
          <tr>
            <th>ID</th>
            <th>Nombre</th>
            </tr>
        </thead>
        <tbody>
         @foreach (var forecast in FsLb)
          {
            <tr>
              <td>@forecast.id</td>
              <td>@forecast.nombre</td>
              <td>
                <button type="button" class="btn btn-info btn-sm" >Editar</button>
              </td>
              <td>
                <button type="button" class="btn btn-danger btn-sm" @onclick="@(() =>EliminarEditorial(forecast.id))">Eliminar</button>
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>
}

@code {
  private modelo[]? FsLb;

  protected override async Task OnInitializedAsync()
  {
    FsLb = await Http.GetFromJsonAsync<modelo[]>("https://localhost:7268/api/Editorial");
  }
  public async Task EliminarEditorial(string id)
  {
      try
      {
          HttpResponseMessage response = await Http.DeleteAsync($"https://localhost:7268/api/Editorial/{id}");
          response.EnsureSuccessStatusCode();

          // Eliminaci√≥n exitosa, recargar la lista de editoriales
          FsLb = await Http.GetFromJsonAsync<modelo[]>("https://localhost:7268/api/Editorial");
      }
      catch (Exception e)
      {
          Console.WriteLine($"Error al eliminar el editorial: {e.Message}");
      }
  }

  public class modelo
  {
    public string? id { get; set; }
    public string? nombre { get; set; }
  }
}

@page "/PanelEditarCliente"
@inject HttpClient Http
@using Blazored.SessionStorage;
@inject NavigationManager NavigationManager
@inject ISessionStorageService sessionStorage

<a class="Btn_salir" style=" text-decoration: none; border-radius: 4px; background-color: red; color: black; padding: 13px 14px 13px 14px;" href="Gestionar">X</a>
<hr />
<h3>Editar Cliente</h3>
<div class="container">
    <form>
        <div class="form-group">
            <label for="nombre">Nombre:</label>
            <input type="text" class="form-control" id="nombre" @bind="nombre">
        </div>
        <div class="form-group">
            <label for="apellido">Apellido:</label>
            <input type="text" class="form-control" id="apellido" @bind="apellido">
        </div>
        <div class="form-group">
            <label for="correo">Correo:</label>
            <input type="email" class="form-control" id="correo" @bind="correo">
        </div>
        <button type="button" class="btn btn-primary" @onclick="ActualizarCliente">Actualizar Cliente</button>
    </form>
</div>

@code {
    // Datos del cliente
    public string Id { get; set; }
    private string nombre;
    private string apellido;
    private string correo;

    protected override async Task OnInitializedAsync()
    {
        // Obtención de datos
        Id = await sessionStorage.GetItemAsync<string>("ClienteId");
        Console.WriteLine("este es el Id:"+Id);
        try
        {
            // Obtener los detalles del cliente con el ID
            var clientes = await Http.GetFromJsonAsync<Clientes>("https://localhost:7268/api/Cliente/"+Id);

            // Asignar los valores a las variables
            nombre = clientes.nombre;
            apellido = clientes.apellido;
            correo = clientes.correo;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error:"+ex.Message);
        }
    }

    private async Task ActualizarCliente()
    {
        try
        {
            var cliente = new Clientes
            {
                nombre = nombre,
                apellido = apellido,
                correo = correo
            };
            Console.WriteLine("Id de clinete: "+Id);
            var response = await Http.PutAsJsonAsync<Clientes>("https://localhost:7268/api/Cliente/"+Id+"", cliente);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Se actualizó el cliente.");
                NavigationManager.NavigateTo($"/Gestionar");
            }
            else
            {
                // Manejo de errores
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    // Clase para representar un cliente
    public class Clientes
    {
        public string? nombre { get; set; }
        public string? apellido { get; set; }
        public string? correo { get; set; }
    }
}
@page "/PanelEditarLibro"
@inject HttpClient Http
@using Blazored.SessionStorage;
@inject NavigationManager NavigationManager
@inject ISessionStorageService sessionStorage



 <a class="Btn_salir" style=" text-decoration: none; border-radius: 4px; background-color: red; color: black; padding: 13px 14px 13px 14px;" href="Gestionar">X</a>
<hr />
<h3>Editar Libro</h3>
<div class="container">
  <form>
    <div class="row">
      <div class="col-form-label">
        <label for="nombre">Nombre:</label>
      </div>
      <div class="col">
        <input type="text" class="form-control" id="nombre" @bind="nombre">
      </div>
    </div>
    <div class="form-group">
      <label for="paginas">Paginas:</label>
      <input type="number" class="form-control" id="paginas" @bind="paginas">
    </div>
    <div class="form-group">
      <label for="descripcion">Descripcion:</label>
      <textarea class="form-control" id="descripcion" @bind="descripcion"></textarea>
    </div>
    <div class="form-group">
      <label for="edicion">Edicion:</label>
      <input type="number" class="form-control" id="edicion" @bind="edicion">
    </div>
    <div class="form-group">
      <label for="publicacion">Publicacion:</label>
      <input type="date" class="form-control" id="publicacion" @bind="publicacion">
    </div>
    <div class="form-group">
      <label for="categoria">Categoria:</label>
       <select class="form-control" @bind="categoria">
        <option value="">Seleccione una categoría</option>
        @foreach (var categoria in categorias)
        {
            <option value="@categoria.id">@categoria.nombre</option>
        }
       </select>
    </div>
    <div class="form-group">
      <label for="autor">Autor:</label>
       <select class="form-control" @bind="autor">
        <option value="">Seleccione un autor</option>
        @foreach (var autor in autores)
        {
            <option value="@autor.id">@($"{autor.nombre} {autor.apellido}")</option>
        }
       </select>
    </div>
    <div class="form-group">
      <label for="editorial">Editorial:</label>
       <select class="form-control" @bind="editorial">
        <option value="">Seleccione una editorial</option>
        @foreach (var editora in editoriales)
        {
            <option value="@editora.id">@editora.nombre</option>
        }
       </select>
    </div>
    <button type="button" class="btn btn-primary" @onclick="ActualizarLibro">Actualizar Libro</button>
  </form>
</div>



@code {
    
    //Datos del libro
 
    public string Id { get; set; }
    
   
    //private string Id = "95353f7c-67dc-4f0f-90ae-1f4102087ea7";
    private string nombre;
    private int paginas;
    private string descripcion;
    private int edicion;
    private DateTime publicacion;
    private string categoria;
    private string autor;
    private string editorial;

     //Listas de elementos
    private List<Categoria> categorias = new List<Categoria>();
    private List<Editorial> editoriales = new List<Editorial>();
    private List<Autores> autores = new List<Autores>();

   
    
    protected override async Task OnInitializedAsync()
    {
        //Obtencion de datos
        Id = await sessionStorage.GetItemAsync<string>("LibroId");
        categorias = await Http.GetFromJsonAsync<List<Categoria>>("https://localhost:7268/api/Categoria");
        editoriales = await Http.GetFromJsonAsync<List<Editorial>>("https://localhost:7268/api/Editorial");
        autores = await Http.GetFromJsonAsync<List<Autores>>("https://localhost:7268/api/Autores");

       
        try
        {
            // Obtener los detalles del libro con el ID 
            var libro = await Http.GetFromJsonAsync<Libro>("https://localhost:7268/api/Libro/" + Id);
            Console.WriteLine($"Id: {Id}");

            // Asignar los valores a las variables
            nombre = libro.nombre;
            paginas = libro.paginas;
            descripcion = libro.descripcion;
            edicion = libro.edicion;
            publicacion = libro.fecha_publicacion;
            categoria = libro.categoria_id;
            autor = libro.autor_id;
            editorial = libro.editorial_id;
        }
        catch (Exception ex)
        {
           
        }
    }



    private async Task ActualizarLibro()
    {
        try
        {
            var libro = new Libro
            {
                nombre = nombre,
                paginas = paginas,
                descripcion = descripcion,
                edicion = edicion,
                fecha_publicacion = publicacion,
                autor_id = autor,
                categoria_id = categoria,
                editorial_id = editorial
            };

            var response = await Http.PutAsJsonAsync<Libro>("https://localhost:7268/api/Libro/"+Id+"", libro);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Se Actualizo el libro.");
                NavigationManager.NavigateTo($"/Gestionar");
            }
            else
            {
                
            }
        }
        catch (Exception ex)
        {
            
        }
    }

    //Clases

    public class Libro
    {
        public string nombre { get; set; }
        public int paginas { get; set; }
        public string descripcion { get; set; }
        public int edicion { get; set; }
        public DateTime fecha_publicacion { get; set; }
        public string autor_id { get; set; }
        public string categoria_id { get; set; }
        public string editorial_id { get; set;}
    }

    public class Categoria
    {
        public string id { get; set; }
        public string nombre { get; set; }
    }

    public class Editorial
    {
        public string id { get; set; }
        public string nombre { get; set; }
    }

    public class Autores
    {
        public string id { get; set; }
        public string nombre { get; set; }
        public string apellido { get; set; }
    }


}
@page "/PanelEditarAutor"
@inject HttpClient Http
@using Blazored.SessionStorage;
@inject NavigationManager NavigationManager
@inject ISessionStorageService sessionStorage
<a class="Btn_salir" style=" text-decoration: none; border-radius: 4px; background-color: red; color: black; padding: 13px 14px 13px 14px;" href="Gestionar">X</a>
<hr />
<h3>Editar Autor</h3>

<div class="container">
    <form>
        <div class="row">
            <div class="col-form-label">
                <label for="nombre">Nombre:</label>
            </div>
            <div class="col">
                <input type="text" class="form-control" id="nombre" @bind="nombre">
            </div>
        </div>
        <div class="form-group">
            <label for="apellido">Apellido:</label>
            <input type="text" class="form-control" id="apellido" @bind="apellido">
        </div>
        <div class="form-group">
            <label for="pais">País:</label>
            <input type="text" class="form-control" id="pais" @bind="pais">
        </div>
        <div class="form-group">
            <label for="descripcion">Descripción:</label>
            <textarea class="form-control" id="descripcion" @bind="descripcion"></textarea>
        </div>
        <button type="button" class="btn btn-primary" @onclick="ActualizarAutor">Actualizar Autor</button>
    </form>
</div>

@code {

    //Datos del autor
    public string Id { get; set; }
    private string nombre;
    private string apellido;
    private string pais;
    private string descripcion;

    protected override async Task OnInitializedAsync()
    {
        //Obtención de datos
        Id = await sessionStorage.GetItemAsync<string>("AutorId");

        try
        {
            // Obtener los detalles del autor con el ID
            var autor = await Http.GetFromJsonAsync<Autor>("https://localhost:7268/api/Autores/" + Id);

            // Asignar los valores a las variables
            nombre = autor.nombre;
            apellido = autor.apellido;
            pais = autor.pais;
            descripcion = autor.descripcion;
        }
        catch (Exception ex)
        {

        }
    }

    private async Task ActualizarAutor()
    {
        try
        {
            var autor = new Autor
                {
                    nombre = nombre,
                    apellido = apellido,
                    pais = pais,
                    descripcion = descripcion
                };

            var response = await Http.PutAsJsonAsync<Autor>("https://localhost:7268/api/Autores/" + Id, autor);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Se actualizó el autor.");
                NavigationManager.NavigateTo("/Gestionar");
            }
            else
            {

            }
        }
        catch (Exception ex)
        {

        }
    }

    //Clases

    public class Autor
    {
        public string nombre { get; set; }
        public string apellido { get; set; }
        public string pais { get; set; }
        public string descripcion { get; set; }
    }
}
